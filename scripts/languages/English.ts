export namespace english {
	export const strings = {
		LANGUAGE_NAME: "English",
		SETTINGS: "System Settings",
		CHANGE_LANGUAGE: "Change the language to \"%\"?",
		SYSTEM_LANGUAGE: "System language",
		UNDO_MAX_COUNT: "Undo max count",
		MEMORY_CONSUMPTION_WARNING: "Increasing the history size increases the memory consumption. Do you wish to continue?",
		FILE_MENUBAR: "File Manipulation",
		SAVE: "Save",
		OPEN: "Open",
		INVALID_FILE: "Invalid file",
		DIFFERENT_MACHINE_FILE: "This file contains a machine of a different type. Do you want to change the current machine type?",
		PROMPT_CONFIRM: "Confirm",
		PROMPT_CANCEL: "Cancel",
		SELECTED_ENTITY: "Selected entity",
		NO_SELECTED_ENTITY: "no selected entity",
		ORIGIN: "Origin",
		TARGET: "Target",
		TRANSITIONS: "Transitions",
		STATE_NAME: "Name",
		STATE_IS_INITIAL: "Is initial",
		STATE_IS_FINAL: "Is final",
		RENAME_STATE: "rename",
		TOGGLE_PROPERTY: "toggle",
		CHANGE_PROPERTY: "change",
		DELETE_STATE: "Delete state",
		DELETE_SELECTED_TRANSITION: "Delete selected transition",
		DELETE_ALL_TRANSITIONS: "Delete all transitions",
		YES: "yes",
		NO: "no",
		FORMAL_DEFINITION: "Formal Definition",
		DEFINITION_WHERE_SUFFIX: ", where:",
		NO_INITIAL_STATE: "none",
		NO_TRANSITIONS: "none",
		SELECT_MACHINE: "Machine Selection",
		ACTION_LIST: "Actions",
		CREATE_STATE: "Create state",
		CREATE_EDGE: "Create edge",
		CLEAR_MACHINE: "Clear machine",
		CLEAR_CONFIRMATION: "Do you really want to reset this automaton?",
		UNDO: "Undo",
		CREATE_STATE_INSTRUCTIONS: "double click on target position",
		CREATE_EDGE_INSTRUCTIONS: "right click on origin then click on target",
		STATE_MANUAL_CREATION: "Enter the state name:",
		EDGE_MANUAL_CREATION: "Choose the origin and destination",
		DUPLICATE_STATE_NAME: "State name already in use",
		STATE_RENAME_ACTION: "Enter the new state name:",
		EDGE_ENTER_NEW_ORIGIN: "Enter a new origin:",
		EDGE_ENTER_NEW_TARGET: "Enter a new target:",
		FA: "Finite Automaton",
		PDA: "Pushdown Automaton",
		LBA: "Linearly Bounded Automaton",
		FA_ENTER_EDGE_CONTENT: "Enter the edge content (up to 1 character):",
		FA_ENTER_EDGE_PLACEHOLDER_1: "symbol",
		PDA_ENTER_EDGE_CONTENT: "Enter the input symbol, stack symbol read and stack symbol(s) written:",
		PDA_ENTER_EDGE_PLACEHOLDER_1: "read (input)",
		PDA_ENTER_EDGE_PLACEHOLDER_2: "read (stack)",
		PDA_ENTER_EDGE_PLACEHOLDER_3: "write",
		LBA_ENTER_EDGE_CONTENT: "Enter the tape symbol(s) read, tape symbol(s) written and move direction:",
		LBA_ENTER_EDGE_PLACEHOLDER_1: "read",
		LBA_ENTER_EDGE_PLACEHOLDER_2: "write",
		LBA_ENTER_EDGE_PLACEHOLDER_3: "direction",
		RECOGNITION: "Recognition",
		MULTIPLE_RECOGNITION: "Multiple recognition",
		TEST_CASE: "test case",
		FAST_RECOGNITION: "Fast recognition (R)",
		STEP_RECOGNITION: "Step-by-step recognition (N)",
		STOP_RECOGNITION: "Stop step-by-step recognition (S)",
		START_MULTIPLE_RECOGNITION: "Multiple recognition (M)",
		CHANGE_MACHINE_WARNING: "Changing the machine type resets the automaton. Do you wish to continue?",
		INPUT_ACCEPTED: "accepted",
		INPUT_REJECTED: "rejected",
		INPUT_LOOPING: "rejected<br>(looping)",
		ERROR_INVALID_STATE_NAME: "Invalid state name",
	};
}
